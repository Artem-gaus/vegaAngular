{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/vehicle-form/vehicle-form.component.css","webpack:///./src/app/components/vehicle-form/vehicle-form.component.html","webpack:///./src/app/components/vehicle-form/vehicle-form.component.ts","webpack:///./src/app/services/vehicle.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <ngx-toastr></ngx-toastr> -->\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['']\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" [routerLink]=\\\"['/vehicles/new']\\\">New Vehicle</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { AppErrorHandler } from './app.error-handler';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\nimport { VehicleService } from './services/vehicle.service';\nimport { AppComponent } from './app.component';\nimport { VehicleFormComponent } from './components/vehicle-form/vehicle-form.component';\n\nconst router: Routes = [\n  { path:'vehicles/new', component: VehicleFormComponent },\n  { path:'vehicles/:id', component: VehicleFormComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VehicleFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(router),\n    HttpModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [\n    VehicleService\n    // { provide: ErrorHandler, useClass: AppErrorHandler }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".radio-inline {\\r\\n    margin-right: 20px;\\r\\n}\"","module.exports = \"<h1>New Vehicle</h1>\\n<p> {{ vehicle | json }} </p>\\n<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"submit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"make\\\">Make</label>\\n    <select id=\\\"make\\\" class=\\\"form-control\\\" (change)=\\\"onMakeChange()\\\" [(ngModel)]=\\\"vehicle.makeId\\\" name=\\\"makeId\\\" required #make=\\\"ngModel\\\">\\n      <option value=\\\"\\\"></option>\\n      <option *ngFor=\\\"let m of makes\\\" value=\\\"{{ m.id }}\\\">{{ m.name }}</option>\\n    </select>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"make.touched && !make.valid\\\">Please specify the make.</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"model\\\">Model</label>\\n    <select id=\\\"model\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.modelId\\\" name=\\\"modelId\\\" required #model=\\\"ngModel\\\">\\n      <option value=\\\"\\\"></option>\\n      <option *ngFor=\\\"let m of models\\\" value=\\\"{{ m.id }}\\\">{{ m.name }}</option>\\n    </select>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"model.touched && !model.valid\\\">Please specify the model.</div>\\n  </div>\\n\\n  <p>Is this vehicle registered?</p>\\n  <label for=\\\"registered\\\" class=\\\"radio-inline\\\">\\n    <input type=\\\"radio\\\" name=\\\"isRegistered\\\" id=\\\"registered\\\" value=\\\"true\\\" [(ngModel)]=\\\"vehicle.isRegistered\\\"> Yes \\n  </label>\\n  <label for=\\\"notRegistered\\\" class=\\\"radio-inline\\\">\\n    <input type=\\\"radio\\\" name=\\\"isRegistered\\\" id=\\\"notRegistered\\\" value=\\\"false\\\" [(ngModel)]=\\\"vehicle.isRegistered\\\"> No\\n  </label>\\n\\n  <h2>Features</h2>\\n  <div *ngFor=\\\"let f of features\\\" class=\\\"checkbox\\\">\\n    <label for=\\\"feature{{ f.id }}\\\">\\n      <input type=\\\"checkbox\\\" id=\\\"feature{{ f.id }}\\\" (change)=\\\"onFeatureToggle(f.id, $event)\\\"> {{ f.name }}\\n    </label>\\n  </div>\\n\\n  <h2>Contect</h2>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"contactName\\\">Name</label>\\n    <input id=\\\"contactName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.contact.name\\\" name=\\\"contactName\\\" required #name=\\\"ngModel\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"name.touched && !name.valid\\\">Please specify the name.</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"contactPhone\\\">Phone</label>\\n    <input id=\\\"contactPhone\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.contact.phone\\\" name=\\\"contactPhone\\\" required #phone=\\\"ngModel\\\">\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"phone.touched && !phone.valid\\\">Please specify the phone.</div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"contactEmail\\\">Email</label>\\n    <input id=\\\"contactEmail\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"vehicle.contact.email\\\" name=\\\"contactEmail\\\">\\n  </div>\\n  <button class=\\\"btn btn-primary\\\">Save</button>\\n</form>\\n\"","import { VehicleService } from './../../services/vehicle.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n// import * as forkJoin from 'rxjs/observable/forkJoin';\n// import { forkJoin } from 'rxjs/observable/forkJoin';\n// import { forkJoin } from 'rxjs';\nimport 'rxjs/add/observable/forkJoin';\n\n@Component({\n  selector: 'app-vehicle-form',\n  templateUrl: './vehicle-form.component.html',\n  styleUrls: ['./vehicle-form.component.css']\n})\nexport class VehicleFormComponent implements OnInit {\n  makes: any[];\n  models: any[];\n  features: any[];\n  vehicle: any = {\n    features: [],\n    contact: {}\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private vehicleService: VehicleService,\n    private toastrService: ToastrService) { \n\n      route.params.subscribe(p => {\n        this.vehicle.id = +p['id'];\n      });\n    }\n\n  ngOnInit() {\n    var sources = [\n      this.vehicleService.getMakes(),\n      this.vehicleService.getFeatures()\n    ];\n\n    if (this.vehicle.id)\n      sources.push(this.vehicleService.getVehicle(this.vehicle.id));\n\n    Observable.forkJoin(sources).subscribe(data => {\n      this.makes = data[0];\n      this.features = data[1];\n\n      if (this.vehicle.id)\n        this.vehicle = data[2];\n    }, err => {\n      if (err.status == 404)\n        this.router.navigate(['/']);\n    });\n\n    // this.vehicleService.getVehicle(this.vehicle.id)\n    //   .subscribe(v => {\n    //     this.vehicle = v;\n    //   });\n      //FOR CHECK INVALID ID \n      // , err => {\n      //   if (err.status == 404)\n      //     this.router.navigate(['/']);\n      // }\n\n    // this.vehicleService.getMakes()\n    //   .subscribe(makes => this.makes = makes);\n\n    // this.vehicleService.getFeatures()\n    //   .subscribe(features => this.features = features);\n  }\n\n  onMakeChange() {\n    var selectedMake = this.makes.find(m => m.id == this.vehicle.makeId);\n    this.models = selectedMake ? selectedMake.models : [];\n    delete this.vehicle.modelId;\n  }\n\n  onFeatureToggle(featureId, $event) {\n    if ($event.target.checked)\n      this.vehicle.features.push(featureId);\n    else {\n      var index = this.vehicle.features.indexOf(featureId);\n      this.vehicle.features.splice(index, 1);\n    }\n  }\n\n  submit() {\n    this.vehicleService.create(this.vehicle)\n      .subscribe(\n        x => console.log(x),\n      err =>{\n        this.toastrService.error('An expected error happened', 'Error', {\n          timeOut: 5000});\n      });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleService {\n  \n  constructor(private http: Http) { }\n\n  getMakes() {\n    return this.http.get('http://localhost:5000/api/makes')\n      .pipe(map(res => res.json()));\n  }\n\n  getFeatures() {\n    return this.http.get('http://localhost:5000/api/features')\n      .pipe(map(res => res.json()));\n  }\n\n  create(vehicle) {\n    return this.http.post('http://localhost:5000/api/vehicles', vehicle)\n      .pipe(map(res => res.json()));\n  }\n\n  getVehicle(id) {\n    return this.http.get('http://localhost:5000/api/vehicles/' + id)\n      .pipe(map(res => res.json()));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}